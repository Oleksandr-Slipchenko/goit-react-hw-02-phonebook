{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactLis.js","components/Filter/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","number","name","ContactForm","state","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","type","onChange","Component","ContactListItem","phone","onRemove","onClick","ContactsList","contacts","length","map","contact","Filter","filter","App","handleAddContact","newContact","handleCheckUnique","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ContactLis","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e777cc7.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst INITIAL_STATE = {\r\n  number: '',\r\n  name: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = INITIAL_STATE;\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAdd } = this.props;\r\n    const isValidateForm = this.validateForm();\r\n    if (!isValidateForm) return;\r\n    onAdd({ id: uuid(), name, number });\r\n    this.resetForm();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    const { onCheckUnique } = this.props;\r\n    if (!name || !number) {\r\n      alert('Some field is empty');\r\n      return false;\r\n    }\r\n    return onCheckUnique(name);\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState(INITIAL_STATE);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          <p>\r\n            <b>Name</b>\r\n          </p>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          <p>\r\n            <b>Number</b>\r\n          </p>\r\n          <br />\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","const ContactListItem = ({ id, name, phone, onRemove }) => {\r\n  return (\r\n    <li>\r\n      {name}: {phone} <button onClick={() => onRemove(id)}>delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactListItem {...contact} onRemove={onRemove} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUnique = name => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist');\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUnique}\n        />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}